#!/usr/bin/env bash

if [ -e default.nix ]; then 
#  rm default.nix
fi

if [ ! -e default.nix ]; then

  cat <<EOF > default.nix
{ pythonVersion ? "27" }:

let
  pkgs = import <nixpkgs> {};
  pythonPackages = builtins.getAttr (
    if pythonVersion == "py"
        then "pypyPackages"
        else "python\${pythonVersion}Packages"
    ) pkgs;
  libPrefix = if pythonVersion == "py"
    then "pypy-c/site-packages"
    else "lib/\${python.libPrefix}/site-packages";
  binPrefix = if pythonVersion == "py"
    then "/pypy-c"
    else "";
  inherit (pythonPackages) python buildPythonPackage;
  custom_pip = pkgs.lib.overrideDerivation pythonPackages.pip (old: {
    prePatch = ''
      sed -i -e "/dest='root_path',/ { N; /\n.*metavar='dir',/ { N; /\n.*default=None/ { N; s@dest='root_path',\n.*metavar='dir',\n.*default=None@dest='root_path',\n            metavar='dir',\n            default=\"`pwd`\"@ } } }" pip/commands/install.py
    '';
  });
in buildPythonPackage {
  name = "`basename \`pwd\``-nix-virtualenv";
  src = ./.;
  buildInputs = [  # <-- built time dependencies
    custom_pip
    pythonPackages.zc_buildout221
  ];
  propagetedBuildInputs = [  # <-- run time dependencies
  ];
  shellHook = ''
    PATH="\`pwd\`\${python}\${binPrefix}/bin:\$PATH"
    PYTHONPATH="`pwd`\${python}/\${libPrefix}:\$PYTHONPATH"
    if [ -e setup.py ]; then
      \${python}/bin/\${python.executable} setup.py develop --prefix \`pwd\`
    fi
  '';
}
EOF

fi

pythonVersion=`basename $0 | rev | cut -c -2 | rev`

nix-shell default.nix --argstr pythonVersion "$pythonVersion"
